keys in react

A "key" is a special string attribute you need to include when creating lists of elements.
Keys help React identify which items have changed, are added, or are removed.
Keys should be given to the elements inside the array to give the elements a stable
identity.
The best way to pick a key is to use a string that uniquely identifies a list item among its
siblings.
Most often you would use IDs from your data as keys.
Keys used within arrays should be unique among their siblings. However they don't
need to be globally unique. We can use the same keys when we produce two different
arrays.
Keys serve as a hint to React but they don't get passed to your components.
If you need the same value in your component, pass it explicitly as a prop with a
different name.


// Declaration and Initialization of Array
 const arr=[10,20,30,40];
// Using Array Map Method
const newArr=arr.map(num=>{
   return<li key={num}>{num*2}</li>;
});


// Declaration and Initialization of Array
 const arr=[10,20,30,40];
// Using Array Map Method
const newArr=arr.map((num,i)=>{
    return<li key={i}>{num*2}</li>;
});

Note:
   A good rule of thumb is that elements inside the map() call need keys.
   Key should be specified inside the array.


state={
 users:[
  {id:101,name:"Rahul"},
  {id:102,name:"Sonam"},
  {id:103,name:"Rahul"}
 ],
};
const new Users=this.state.users.map(user=>{
return(
   <h1 key={user.id}>ID:{user.id}Name:{user.name}</h1>
  );
});